{
  "version": 3,
  "sources": ["../three/examples/jsm/loaders/OBJLoader.js"],
  "sourcesContent": ["/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nimport {\n\tBufferGeometry,\n\tDefaultLoadingManager,\n\tFileLoader,\n\tFloat32BufferAttribute,\n\tGroup,\n\tLineBasicMaterial,\n\tLineSegments,\n\tMaterial,\n\tMesh,\n\tMeshPhongMaterial,\n\tNoColors,\n\tPoints,\n\tPointsMaterial,\n\tVertexColors\n} from \"../../../build/three.module.js\";\n\nvar OBJLoader = ( function () {\n\n\t// o object_name | g group_name\n\tvar object_pattern = /^[og]\\s*(.+)?/;\n\t// mtllib file_reference\n\tvar material_library_pattern = /^mtllib /;\n\t// usemtl material_name\n\tvar material_use_pattern = /^usemtl /;\n\n\tfunction ParserState() {\n\n\t\tvar state = {\n\t\t\tobjects: [],\n\t\t\tobject: {},\n\n\t\t\tvertices: [],\n\t\t\tnormals: [],\n\t\t\tcolors: [],\n\t\t\tuvs: [],\n\n\t\t\tmaterialLibraries: [],\n\n\t\t\tstartObject: function ( name, fromDeclaration ) {\n\n\t\t\t\t// If the current object (initial from reset) is not from a g/o declaration in the parsed\n\t\t\t\t// file. We need to use it for the first parsed g/o to keep things in sync.\n\t\t\t\tif ( this.object && this.object.fromDeclaration === false ) {\n\n\t\t\t\t\tthis.object.name = name;\n\t\t\t\t\tthis.object.fromDeclaration = ( fromDeclaration !== false );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tvar previousMaterial = ( this.object && typeof this.object.currentMaterial === 'function' ? this.object.currentMaterial() : undefined );\n\n\t\t\t\tif ( this.object && typeof this.object._finalize === 'function' ) {\n\n\t\t\t\t\tthis.object._finalize( true );\n\n\t\t\t\t}\n\n\t\t\t\tthis.object = {\n\t\t\t\t\tname: name || '',\n\t\t\t\t\tfromDeclaration: ( fromDeclaration !== false ),\n\n\t\t\t\t\tgeometry: {\n\t\t\t\t\t\tvertices: [],\n\t\t\t\t\t\tnormals: [],\n\t\t\t\t\t\tcolors: [],\n\t\t\t\t\t\tuvs: []\n\t\t\t\t\t},\n\t\t\t\t\tmaterials: [],\n\t\t\t\t\tsmooth: true,\n\n\t\t\t\t\tstartMaterial: function ( name, libraries ) {\n\n\t\t\t\t\t\tvar previous = this._finalize( false );\n\n\t\t\t\t\t\t// New usemtl declaration overwrites an inherited material, except if faces were declared\n\t\t\t\t\t\t// after the material, then it must be preserved for proper MultiMaterial continuation.\n\t\t\t\t\t\tif ( previous && ( previous.inherited || previous.groupCount <= 0 ) ) {\n\n\t\t\t\t\t\t\tthis.materials.splice( previous.index, 1 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar material = {\n\t\t\t\t\t\t\tindex: this.materials.length,\n\t\t\t\t\t\t\tname: name || '',\n\t\t\t\t\t\t\tmtllib: ( Array.isArray( libraries ) && libraries.length > 0 ? libraries[ libraries.length - 1 ] : '' ),\n\t\t\t\t\t\t\tsmooth: ( previous !== undefined ? previous.smooth : this.smooth ),\n\t\t\t\t\t\t\tgroupStart: ( previous !== undefined ? previous.groupEnd : 0 ),\n\t\t\t\t\t\t\tgroupEnd: - 1,\n\t\t\t\t\t\t\tgroupCount: - 1,\n\t\t\t\t\t\t\tinherited: false,\n\n\t\t\t\t\t\t\tclone: function ( index ) {\n\n\t\t\t\t\t\t\t\tvar cloned = {\n\t\t\t\t\t\t\t\t\tindex: ( typeof index === 'number' ? index : this.index ),\n\t\t\t\t\t\t\t\t\tname: this.name,\n\t\t\t\t\t\t\t\t\tmtllib: this.mtllib,\n\t\t\t\t\t\t\t\t\tsmooth: this.smooth,\n\t\t\t\t\t\t\t\t\tgroupStart: 0,\n\t\t\t\t\t\t\t\t\tgroupEnd: - 1,\n\t\t\t\t\t\t\t\t\tgroupCount: - 1,\n\t\t\t\t\t\t\t\t\tinherited: false\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tcloned.clone = this.clone.bind( cloned );\n\t\t\t\t\t\t\t\treturn cloned;\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tthis.materials.push( material );\n\n\t\t\t\t\t\treturn material;\n\n\t\t\t\t\t},\n\n\t\t\t\t\tcurrentMaterial: function () {\n\n\t\t\t\t\t\tif ( this.materials.length > 0 ) {\n\n\t\t\t\t\t\t\treturn this.materials[ this.materials.length - 1 ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn undefined;\n\n\t\t\t\t\t},\n\n\t\t\t\t\t_finalize: function ( end ) {\n\n\t\t\t\t\t\tvar lastMultiMaterial = this.currentMaterial();\n\t\t\t\t\t\tif ( lastMultiMaterial && lastMultiMaterial.groupEnd === - 1 ) {\n\n\t\t\t\t\t\t\tlastMultiMaterial.groupEnd = this.geometry.vertices.length / 3;\n\t\t\t\t\t\t\tlastMultiMaterial.groupCount = lastMultiMaterial.groupEnd - lastMultiMaterial.groupStart;\n\t\t\t\t\t\t\tlastMultiMaterial.inherited = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Ignore objects tail materials if no face declarations followed them before a new o/g started.\n\t\t\t\t\t\tif ( end && this.materials.length > 1 ) {\n\n\t\t\t\t\t\t\tfor ( var mi = this.materials.length - 1; mi >= 0; mi -- ) {\n\n\t\t\t\t\t\t\t\tif ( this.materials[ mi ].groupCount <= 0 ) {\n\n\t\t\t\t\t\t\t\t\tthis.materials.splice( mi, 1 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Guarantee at least one empty material, this makes the creation later more straight forward.\n\t\t\t\t\t\tif ( end && this.materials.length === 0 ) {\n\n\t\t\t\t\t\t\tthis.materials.push( {\n\t\t\t\t\t\t\t\tname: '',\n\t\t\t\t\t\t\t\tsmooth: this.smooth\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn lastMultiMaterial;\n\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// Inherit previous objects material.\n\t\t\t\t// Spec tells us that a declared material must be set to all objects until a new material is declared.\n\t\t\t\t// If a usemtl declaration is encountered while this new object is being parsed, it will\n\t\t\t\t// overwrite the inherited material. Exception being that there was already face declarations\n\t\t\t\t// to the inherited material, then it will be preserved for proper MultiMaterial continuation.\n\n\t\t\t\tif ( previousMaterial && previousMaterial.name && typeof previousMaterial.clone === 'function' ) {\n\n\t\t\t\t\tvar declared = previousMaterial.clone( 0 );\n\t\t\t\t\tdeclared.inherited = true;\n\t\t\t\t\tthis.object.materials.push( declared );\n\n\t\t\t\t}\n\n\t\t\t\tthis.objects.push( this.object );\n\n\t\t\t},\n\n\t\t\tfinalize: function () {\n\n\t\t\t\tif ( this.object && typeof this.object._finalize === 'function' ) {\n\n\t\t\t\t\tthis.object._finalize( true );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tparseVertexIndex: function ( value, len ) {\n\n\t\t\t\tvar index = parseInt( value, 10 );\n\t\t\t\treturn ( index >= 0 ? index - 1 : index + len / 3 ) * 3;\n\n\t\t\t},\n\n\t\t\tparseNormalIndex: function ( value, len ) {\n\n\t\t\t\tvar index = parseInt( value, 10 );\n\t\t\t\treturn ( index >= 0 ? index - 1 : index + len / 3 ) * 3;\n\n\t\t\t},\n\n\t\t\tparseUVIndex: function ( value, len ) {\n\n\t\t\t\tvar index = parseInt( value, 10 );\n\t\t\t\treturn ( index >= 0 ? index - 1 : index + len / 2 ) * 2;\n\n\t\t\t},\n\n\t\t\taddVertex: function ( a, b, c ) {\n\n\t\t\t\tvar src = this.vertices;\n\t\t\t\tvar dst = this.object.geometry.vertices;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t\t},\n\n\t\t\taddVertexPoint: function ( a ) {\n\n\t\t\t\tvar src = this.vertices;\n\t\t\t\tvar dst = this.object.geometry.vertices;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\n\t\t\t},\n\n\t\t\taddVertexLine: function ( a ) {\n\n\t\t\t\tvar src = this.vertices;\n\t\t\t\tvar dst = this.object.geometry.vertices;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\n\t\t\t},\n\n\t\t\taddNormal: function ( a, b, c ) {\n\n\t\t\t\tvar src = this.normals;\n\t\t\t\tvar dst = this.object.geometry.normals;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t\t},\n\n\t\t\taddColor: function ( a, b, c ) {\n\n\t\t\t\tvar src = this.colors;\n\t\t\t\tvar dst = this.object.geometry.colors;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t\t},\n\n\t\t\taddUV: function ( a, b, c ) {\n\n\t\t\t\tvar src = this.uvs;\n\t\t\t\tvar dst = this.object.geometry.uvs;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ] );\n\t\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ] );\n\t\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ] );\n\n\t\t\t},\n\n\t\t\taddUVLine: function ( a ) {\n\n\t\t\t\tvar src = this.uvs;\n\t\t\t\tvar dst = this.object.geometry.uvs;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ] );\n\n\t\t\t},\n\n\t\t\taddFace: function ( a, b, c, ua, ub, uc, na, nb, nc ) {\n\n\t\t\t\tvar vLen = this.vertices.length;\n\n\t\t\t\tvar ia = this.parseVertexIndex( a, vLen );\n\t\t\t\tvar ib = this.parseVertexIndex( b, vLen );\n\t\t\t\tvar ic = this.parseVertexIndex( c, vLen );\n\n\t\t\t\tthis.addVertex( ia, ib, ic );\n\n\t\t\t\tif ( ua !== undefined && ua !== '' ) {\n\n\t\t\t\t\tvar uvLen = this.uvs.length;\n\t\t\t\t\tia = this.parseUVIndex( ua, uvLen );\n\t\t\t\t\tib = this.parseUVIndex( ub, uvLen );\n\t\t\t\t\tic = this.parseUVIndex( uc, uvLen );\n\t\t\t\t\tthis.addUV( ia, ib, ic );\n\n\t\t\t\t}\n\n\t\t\t\tif ( na !== undefined && na !== '' ) {\n\n\t\t\t\t\t// Normals are many times the same. If so, skip function call and parseInt.\n\t\t\t\t\tvar nLen = this.normals.length;\n\t\t\t\t\tia = this.parseNormalIndex( na, nLen );\n\n\t\t\t\t\tib = na === nb ? ia : this.parseNormalIndex( nb, nLen );\n\t\t\t\t\tic = na === nc ? ia : this.parseNormalIndex( nc, nLen );\n\n\t\t\t\t\tthis.addNormal( ia, ib, ic );\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.colors.length > 0 ) {\n\n\t\t\t\t\tthis.addColor( ia, ib, ic );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\taddPointGeometry: function ( vertices ) {\n\n\t\t\t\tthis.object.geometry.type = 'Points';\n\n\t\t\t\tvar vLen = this.vertices.length;\n\n\t\t\t\tfor ( var vi = 0, l = vertices.length; vi < l; vi ++ ) {\n\n\t\t\t\t\tthis.addVertexPoint( this.parseVertexIndex( vertices[ vi ], vLen ) );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\taddLineGeometry: function ( vertices, uvs ) {\n\n\t\t\t\tthis.object.geometry.type = 'Line';\n\n\t\t\t\tvar vLen = this.vertices.length;\n\t\t\t\tvar uvLen = this.uvs.length;\n\n\t\t\t\tfor ( var vi = 0, l = vertices.length; vi < l; vi ++ ) {\n\n\t\t\t\t\tthis.addVertexLine( this.parseVertexIndex( vertices[ vi ], vLen ) );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var uvi = 0, l = uvs.length; uvi < l; uvi ++ ) {\n\n\t\t\t\t\tthis.addUVLine( this.parseUVIndex( uvs[ uvi ], uvLen ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tstate.startObject( '', false );\n\n\t\treturn state;\n\n\t}\n\n\t//\n\n\tfunction OBJLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.materials = null;\n\n\t}\n\n\tOBJLoader.prototype = {\n\n\t\tconstructor: OBJLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new FileLoader( scope.manager );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tonLoad( scope.parse( text ) );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetMaterials: function ( materials ) {\n\n\t\t\tthis.materials = materials;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tparse: function ( text ) {\n\n\t\t\tconsole.time( 'OBJLoader' );\n\n\t\t\tvar state = new ParserState();\n\n\t\t\tif ( text.indexOf( '\\r\\n' ) !== - 1 ) {\n\n\t\t\t\t// This is faster than String.split with regex that splits on both\n\t\t\t\ttext = text.replace( /\\r\\n/g, '\\n' );\n\n\t\t\t}\n\n\t\t\tif ( text.indexOf( '\\\\\\n' ) !== - 1 ) {\n\n\t\t\t\t// join lines separated by a line continuation character (\\)\n\t\t\t\ttext = text.replace( /\\\\\\n/g, '' );\n\n\t\t\t}\n\n\t\t\tvar lines = text.split( '\\n' );\n\t\t\tvar line = '', lineFirstChar = '';\n\t\t\tvar lineLength = 0;\n\t\t\tvar result = [];\n\n\t\t\t// Faster to just trim left side of the line. Use if available.\n\t\t\tvar trimLeft = ( typeof ''.trimLeft === 'function' );\n\n\t\t\tfor ( var i = 0, l = lines.length; i < l; i ++ ) {\n\n\t\t\t\tline = lines[ i ];\n\n\t\t\t\tline = trimLeft ? line.trimLeft() : line.trim();\n\n\t\t\t\tlineLength = line.length;\n\n\t\t\t\tif ( lineLength === 0 ) continue;\n\n\t\t\t\tlineFirstChar = line.charAt( 0 );\n\n\t\t\t\t// @todo invoke passed in handler if any\n\t\t\t\tif ( lineFirstChar === '#' ) continue;\n\n\t\t\t\tif ( lineFirstChar === 'v' ) {\n\n\t\t\t\t\tvar data = line.split( /\\s+/ );\n\n\t\t\t\t\tswitch ( data[ 0 ] ) {\n\n\t\t\t\t\t\tcase 'v':\n\t\t\t\t\t\t\tstate.vertices.push(\n\t\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 2 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 3 ] )\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif ( data.length >= 7 ) {\n\n\t\t\t\t\t\t\t\tstate.colors.push(\n\t\t\t\t\t\t\t\t\tparseFloat( data[ 4 ] ),\n\t\t\t\t\t\t\t\t\tparseFloat( data[ 5 ] ),\n\t\t\t\t\t\t\t\t\tparseFloat( data[ 6 ] )\n\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'vn':\n\t\t\t\t\t\t\tstate.normals.push(\n\t\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 2 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 3 ] )\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'vt':\n\t\t\t\t\t\t\tstate.uvs.push(\n\t\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 2 ] )\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( lineFirstChar === 'f' ) {\n\n\t\t\t\t\tvar lineData = line.substr( 1 ).trim();\n\t\t\t\t\tvar vertexData = lineData.split( /\\s+/ );\n\t\t\t\t\tvar faceVertices = [];\n\n\t\t\t\t\t// Parse the face vertex data into an easy to work with format\n\n\t\t\t\t\tfor ( var j = 0, jl = vertexData.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar vertex = vertexData[ j ];\n\n\t\t\t\t\t\tif ( vertex.length > 0 ) {\n\n\t\t\t\t\t\t\tvar vertexParts = vertex.split( '/' );\n\t\t\t\t\t\t\tfaceVertices.push( vertexParts );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Draw an edge between the first vertex and all subsequent vertices to form an n-gon\n\n\t\t\t\t\tvar v1 = faceVertices[ 0 ];\n\n\t\t\t\t\tfor ( var j = 1, jl = faceVertices.length - 1; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar v2 = faceVertices[ j ];\n\t\t\t\t\t\tvar v3 = faceVertices[ j + 1 ];\n\n\t\t\t\t\t\tstate.addFace(\n\t\t\t\t\t\t\tv1[ 0 ], v2[ 0 ], v3[ 0 ],\n\t\t\t\t\t\t\tv1[ 1 ], v2[ 1 ], v3[ 1 ],\n\t\t\t\t\t\t\tv1[ 2 ], v2[ 2 ], v3[ 2 ]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( lineFirstChar === 'l' ) {\n\n\t\t\t\t\tvar lineParts = line.substring( 1 ).trim().split( \" \" );\n\t\t\t\t\tvar lineVertices = [], lineUVs = [];\n\n\t\t\t\t\tif ( line.indexOf( \"/\" ) === - 1 ) {\n\n\t\t\t\t\t\tlineVertices = lineParts;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tfor ( var li = 0, llen = lineParts.length; li < llen; li ++ ) {\n\n\t\t\t\t\t\t\tvar parts = lineParts[ li ].split( \"/\" );\n\n\t\t\t\t\t\t\tif ( parts[ 0 ] !== \"\" ) lineVertices.push( parts[ 0 ] );\n\t\t\t\t\t\t\tif ( parts[ 1 ] !== \"\" ) lineUVs.push( parts[ 1 ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tstate.addLineGeometry( lineVertices, lineUVs );\n\n\t\t\t\t} else if ( lineFirstChar === 'p' ) {\n\n\t\t\t\t\tvar lineData = line.substr( 1 ).trim();\n\t\t\t\t\tvar pointData = lineData.split( \" \" );\n\n\t\t\t\t\tstate.addPointGeometry( pointData );\n\n\t\t\t\t} else if ( ( result = object_pattern.exec( line ) ) !== null ) {\n\n\t\t\t\t\t// o object_name\n\t\t\t\t\t// or\n\t\t\t\t\t// g group_name\n\n\t\t\t\t\t// WORKAROUND: https://bugs.chromium.org/p/v8/issues/detail?id=2869\n\t\t\t\t\t// var name = result[ 0 ].substr( 1 ).trim();\n\t\t\t\t\tvar name = ( \" \" + result[ 0 ].substr( 1 ).trim() ).substr( 1 );\n\n\t\t\t\t\tstate.startObject( name );\n\n\t\t\t\t} else if ( material_use_pattern.test( line ) ) {\n\n\t\t\t\t\t// material\n\n\t\t\t\t\tstate.object.startMaterial( line.substring( 7 ).trim(), state.materialLibraries );\n\n\t\t\t\t} else if ( material_library_pattern.test( line ) ) {\n\n\t\t\t\t\t// mtl file\n\n\t\t\t\t\tstate.materialLibraries.push( line.substring( 7 ).trim() );\n\n\t\t\t\t} else if ( lineFirstChar === 's' ) {\n\n\t\t\t\t\tresult = line.split( ' ' );\n\n\t\t\t\t\t// smooth shading\n\n\t\t\t\t\t// @todo Handle files that have varying smooth values for a set of faces inside one geometry,\n\t\t\t\t\t// but does not define a usemtl for each face set.\n\t\t\t\t\t// This should be detected and a dummy material created (later MultiMaterial and geometry groups).\n\t\t\t\t\t// This requires some care to not create extra material on each smooth value for \"normal\" obj files.\n\t\t\t\t\t// where explicit usemtl defines geometry groups.\n\t\t\t\t\t// Example asset: examples/models/obj/cerberus/Cerberus.obj\n\n\t\t\t\t\t/*\n\t\t\t\t\t * http://paulbourke.net/dataformats/obj/\n\t\t\t\t\t * or\n\t\t\t\t\t * http://www.cs.utah.edu/~boulos/cs3505/obj_spec.pdf\n\t\t\t\t\t *\n\t\t\t\t\t * From chapter \"Grouping\" Syntax explanation \"s group_number\":\n\t\t\t\t\t * \"group_number is the smoothing group number. To turn off smoothing groups, use a value of 0 or off.\n\t\t\t\t\t * Polygonal elements use group numbers to put elements in different smoothing groups. For free-form\n\t\t\t\t\t * surfaces, smoothing groups are either turned on or off; there is no difference between values greater\n\t\t\t\t\t * than 0.\"\n\t\t\t\t\t */\n\t\t\t\t\tif ( result.length > 1 ) {\n\n\t\t\t\t\t\tvar value = result[ 1 ].trim().toLowerCase();\n\t\t\t\t\t\tstate.object.smooth = ( value !== '0' && value !== 'off' );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// ZBrush can produce \"s\" lines #11707\n\t\t\t\t\t\tstate.object.smooth = true;\n\n\t\t\t\t\t}\n\t\t\t\t\tvar material = state.object.currentMaterial();\n\t\t\t\t\tif ( material ) material.smooth = state.object.smooth;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Handle null terminated files without exception\n\t\t\t\t\tif ( line === '\\0' ) continue;\n\n\t\t\t\t\tthrow new Error( 'THREE.OBJLoader: Unexpected line: \"' + line + '\"' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.finalize();\n\n\t\t\tvar container = new Group();\n\t\t\tcontainer.materialLibraries = [].concat( state.materialLibraries );\n\n\t\t\tfor ( var i = 0, l = state.objects.length; i < l; i ++ ) {\n\n\t\t\t\tvar object = state.objects[ i ];\n\t\t\t\tvar geometry = object.geometry;\n\t\t\t\tvar materials = object.materials;\n\t\t\t\tvar isLine = ( geometry.type === 'Line' );\n\t\t\t\tvar isPoints = ( geometry.type === 'Points' );\n\t\t\t\tvar hasVertexColors = false;\n\n\t\t\t\t// Skip o/g line declarations that did not follow with any faces\n\t\t\t\tif ( geometry.vertices.length === 0 ) continue;\n\n\t\t\t\tvar buffergeometry = new BufferGeometry();\n\n\t\t\t\tbuffergeometry.addAttribute( 'position', new Float32BufferAttribute( geometry.vertices, 3 ) );\n\n\t\t\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\t\t\tbuffergeometry.addAttribute( 'normal', new Float32BufferAttribute( geometry.normals, 3 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbuffergeometry.computeVertexNormals();\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\t\t\thasVertexColors = true;\n\t\t\t\t\tbuffergeometry.addAttribute( 'color', new Float32BufferAttribute( geometry.colors, 3 ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.uvs.length > 0 ) {\n\n\t\t\t\t\tbuffergeometry.addAttribute( 'uv', new Float32BufferAttribute( geometry.uvs, 2 ) );\n\n\t\t\t\t}\n\n\t\t\t\t// Create materials\n\n\t\t\t\tvar createdMaterials = [];\n\n\t\t\t\tfor ( var mi = 0, miLen = materials.length; mi < miLen; mi ++ ) {\n\n\t\t\t\t\tvar sourceMaterial = materials[ mi ];\n\t\t\t\t\tvar material = undefined;\n\n\t\t\t\t\tif ( this.materials !== null ) {\n\n\t\t\t\t\t\tmaterial = this.materials.create( sourceMaterial.name );\n\n\t\t\t\t\t\t// mtl etc. loaders probably can't create line materials correctly, copy properties to a line material.\n\t\t\t\t\t\tif ( isLine && material && ! ( material instanceof LineBasicMaterial ) ) {\n\n\t\t\t\t\t\t\tvar materialLine = new LineBasicMaterial();\n\t\t\t\t\t\t\tMaterial.prototype.copy.call( materialLine, material );\n\t\t\t\t\t\t\tmaterialLine.color.copy( material.color );\n\t\t\t\t\t\t\tmaterialLine.lights = false;\n\t\t\t\t\t\t\tmaterial = materialLine;\n\n\t\t\t\t\t\t} else if ( isPoints && material && ! ( material instanceof PointsMaterial ) ) {\n\n\t\t\t\t\t\t\tvar materialPoints = new PointsMaterial( { size: 10, sizeAttenuation: false } );\n\t\t\t\t\t\t\tMaterial.prototype.copy.call( materialPoints, material );\n\t\t\t\t\t\t\tmaterialPoints.color.copy( material.color );\n\t\t\t\t\t\t\tmaterialPoints.map = material.map;\n\t\t\t\t\t\t\tmaterialPoints.lights = false;\n\t\t\t\t\t\t\tmaterial = materialPoints;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! material ) {\n\n\t\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\t\tmaterial = new LineBasicMaterial();\n\n\t\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\t\tmaterial = new PointsMaterial( { size: 1, sizeAttenuation: false } );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tmaterial = new MeshPhongMaterial();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaterial.name = sourceMaterial.name;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterial.flatShading = sourceMaterial.smooth ? false : true;\n\t\t\t\t\tmaterial.vertexColors = hasVertexColors ? VertexColors : NoColors;\n\n\t\t\t\t\tcreatedMaterials.push( material );\n\n\t\t\t\t}\n\n\t\t\t\t// Create mesh\n\n\t\t\t\tvar mesh;\n\n\t\t\t\tif ( createdMaterials.length > 1 ) {\n\n\t\t\t\t\tfor ( var mi = 0, miLen = materials.length; mi < miLen; mi ++ ) {\n\n\t\t\t\t\t\tvar sourceMaterial = materials[ mi ];\n\t\t\t\t\t\tbuffergeometry.addGroup( sourceMaterial.groupStart, sourceMaterial.groupCount, mi );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\tmesh = new LineSegments( buffergeometry, createdMaterials );\n\n\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\tmesh = new Points( buffergeometry, createdMaterials );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tmesh = new Mesh( buffergeometry, createdMaterials );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\tmesh = new LineSegments( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\tmesh = new Points( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tmesh = new Mesh( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tmesh.name = object.name;\n\n\t\t\t\tcontainer.add( mesh );\n\n\t\t\t}\n\n\t\t\tconsole.timeEnd( 'OBJLoader' );\n\n\t\t\treturn container;\n\n\t\t}\n\n\t};\n\n\treturn OBJLoader;\n\n} )();\n\nexport { OBJLoader };\n"],
  "mappings": "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",
  "names": []
}
